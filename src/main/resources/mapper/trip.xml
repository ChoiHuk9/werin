<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="trip">
	<insert id="create" parameterType="tripVO">
		insert into trip values
		(#{trip_id},#{trip_title},#{trip_content},#{trip_start_date},#{trip_end_date},
		#{trip_writer}, now(), 0,0,#{trip_img})
	</insert>

	<update id="update" parameterType="tripVO">
		update trip set trip_title =
		#{trip_title}, trip_content = #{trip_content} where trip_id =
		#{trip_id}
	</update>

	<update id="viewCount" parameterType="int">
		update trip 
		set trip_count = trip_count + 1 
		where trip_id = #{trip_id}
	</update>
	
	<!-- 게시글 추천수 +1 -->
	<update id = "updateLike" parameterType="tripVO">
		update trip 
		set trip_total_like = trip_total_like + 1 
		where trip_id = #{trip_id}
		<selectKey resultType="java.lang.Integer" keyProperty="trip_total_like" order = "AFTER">
			select trip_total_like from trip where trip_id = #{trip_id}
		</selectKey>
	</update>
	
	<!-- 추천하면 state값을 0으로 set -->
	<update id = "updateLike2" parameterType="tripLikeVO">
		update trip_like
		set like_state = 0
		where member_id = #{member_id}
		<selectKey resultType="java.lang.Integer" keyProperty="like_state" order = "AFTER">
			select like_state from trip_like where member_id = #{member_id}
		</selectKey>
	</update>
	
	<!-- 비추천시 게시글 추천수 -1 -->
	<update id = "updateDislike" parameterType="tripVO">
		update trip 
		set trip_total_like = trip_total_like - 1 
		where trip_id = #{trip_id}
		<selectKey resultType="java.lang.Integer" keyProperty="trip_total_like" order = "AFTER">
			select trip_total_like from trip where trip_id = #{trip_id}
		</selectKey>
	</update>
	
	<!-- 비추천하면 state값을 1로 set -->
	<update id = "updateDislike2" parameterType="tripLikeVO">
		update trip_like
		set like_state = 1, like_check = 1
		where member_id = #{member_id}
	</update>
	
	<!-- 게시글 추천시 Like테이블에 insert (state 값 0인 채로 insert) -->
	<insert id = "insertLike" parameterType="tripLikeVO">
		insert into trip_like values (#{like_id}, #{trip_id}, #{member_id}, 0, 0)
																	<!-- state, check -->
	</insert>


	<delete id="delete" parameterType="tripVO">
		delete from trip where
		trip_id
		= #{trip_id}
	</delete>

	<select id="one" parameterType="tripVO" resultType="tripVO">
		SELECT * FROM
		trip WHERE trip_id = #{trip_id};
	</select>

	<!-- <select id="list" resultType="tripVO">
		select * from trip order by trip_id
		desc
	</select> -->
	
	<select id="list" parameterType="pageVO" resultType="tripVO">
		select *
		from (select row_number() over(order by trip_id desc)
		as row_no, trip_id, trip_title, trip_content, trip_start_date,
		trip_end_date, trip_writer, trip_writedate, trip_count, trip_total_like,
		trip_img
		from trip t) t2
		where t2.row_no BETWEEN ${start} and ${end}
	</select>

	<select id="count" resultType="int">
		select count(*) from trip
	</select>
</mapper>
